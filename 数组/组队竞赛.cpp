/*链接：https://www.nowcoder.com/questionTerminal/6736cc3ffd1444a4a0057dee89be789b?orderByHotValue=1&page=1&onlyReference=false
来源：牛客网

牛牛举办了一次编程比赛,参加比赛的有3*n个选手,每个选手都有一个水平值a_i.现在要将这些选手进行组队,一共组成n个队伍,即每个队伍3人.牛牛发现队伍的水平值等于该队伍队员中第二高水平值。
例如:
一个队伍三个队员的水平值分别是3,3,3.那么队伍的水平值是3
一个队伍三个队员的水平值分别是3,2,3.那么队伍的水平值是3
一个队伍三个队员的水平值分别是1,5,2.那么队伍的水平值是2
为了让比赛更有看点,牛牛想安排队伍使所有队伍的水平值总和最大。
如样例所示:
如果牛牛把6个队员划分到两个队伍
如果方案为:
team1:{1,2,5}, team2:{5,5,8}, 这时候水平值总和为7.
而如果方案为:
team1:{2,5,8}, team2:{1,5,5}, 这时候水平值总和为10.
没有比总和为10更大的方案,所以输出10.
*/

/*输入的第一行为一个正整数n(1 ≤ n ≤ 10^5)

第二行包括3*n个整数a_i(1 ≤ a_i ≤ 10^9),表示每个参赛选手的水平值.
输出一个整数表示所有队伍的水平值总和最大值.*/

/*本题的主要思路是贪心算法，保证每组的第二个值取到最大就
* 排序，然后取 第 3n - 1 3n - 3 3n - 5...个元素累加即可
* 例如 现在排序后 有 1 2 5 5 8 9 ，那么取 8 和 5相加等于 13
* 我们每次尽量取最大，但是最大的数不可能是中位数，所以退而求其次，取 每组中第二大的
*/
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int main()
{
    int n = 0;
    cin >> n;//n个队伍
    
    vector<int> v;
    v.resize(3*n);//3n个人，一组3个
	
    for (int i = 0; i< 3*n;i++)
    {
        cin >> v[i];
    }
    sort(v.begin(),v.end());
    
    long long sum = 0;//注意这里要用long long，之前错就错在这儿
    int i = v.size()-2;
    for (int j = 0;j < n;j++)
    {
        sum += v[i];
        i -= 2;
    }
    cout<<sum<<endl;
    return 0;
}